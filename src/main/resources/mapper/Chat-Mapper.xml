<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booktory.booktoryserver.Chat.mapper.ChatMapper">
    <insert id="createChatRoom" parameterType="chat" useGeneratedKeys="true" keyProperty="chat_id">
        insert into chat (seller_id, buyer_id, used_book_id, room_id) values (#{seller_id}, #{buyer_id}, #{used_book_id}, #{room_id})
    </insert>

    <select id="getChatRoomList" resultType="chatList">
        SELECT
            c.chat_id,
            (SELECT user_email FROM users WHERE user_id = #{user_id}) AS user_email,
            CASE
                WHEN c.seller_id = #{user_id} THEN buyer.user_nickname
                ELSE seller.user_nickname
                END AS chat_partner_nickname,
            CASE
                WHEN c.seller_id = #{user_id} THEN buyer.user_img
                ELSE seller.user_img
                END AS chat_partner_img,
            (
                SELECT cm.content
                FROM chat_message cm
                WHERE cm.chat_id = c.chat_id
                ORDER BY cm.message_created_at DESC
                LIMIT 1
            ) AS last_message_content,
        (
            SELECT cm.message_created_at
            FROM chat_message cm
            WHERE cm.chat_id = c.chat_id
            ORDER BY cm.message_created_at DESC
            LIMIT 1
        ) AS last_message_time,
        (
            SELECT ubi.stored_image_name
            FROM used_book_image ubi
            WHERE ubi.used_book_id = c.used_book_id
            ORDER BY ubi.used_book_image_id ASC
            LIMIT 1
        ) AS stored_image_name
        FROM chat c
            LEFT JOIN users buyer ON c.buyer_id = buyer.user_id
            LEFT JOIN users seller ON c.seller_id = seller.user_id
        WHERE c.seller_id = #{user_id} OR c.buyer_id = #{user_id};
    </select>


    <select id="getChatHistory" resultType="chatHistory">
        SELECT
            c.chat_id,
            CASE
                WHEN c.seller_id = #{user_id} THEN buyer.user_nickname
                ELSE seller.user_nickname
                END AS chat_partner_nickname,
            cm.sender_id,
            sender.user_nickname AS sender_nickname,
            sender.user_email AS sender_email,
            ub.title,
            ub.discount,
            (SELECT ubi.stored_image_name
             FROM used_book_image ubi
             WHERE ubi.used_book_id = ub.used_book_id
             ORDER BY ubi.used_book_image_id ASC
                LIMIT 1) AS stored_image_name, -- 첫 번째 이미지를 선택하는 서브쿼리
        cm.content AS message_content,
        cm.message_created_at AS message_created_at
        FROM chat c
            JOIN chat_message cm ON c.chat_id = cm.chat_id
            JOIN used_book ub ON c.used_book_id = ub.used_book_id
            LEFT JOIN users buyer ON c.buyer_id = buyer.user_id
            LEFT JOIN users seller ON c.seller_id = seller.user_id
            LEFT JOIN users sender ON cm.sender_id = sender.user_id
        WHERE c.chat_id = #{chat_id}
          AND (c.seller_id = #{user_id} OR c.buyer_id = #{user_id});
    </select>

    <insert id="saveMessage" parameterType="chatMessage" keyProperty="chat_message_id" useGeneratedKeys="true">
        insert into chat_message
            (content, chat_id, sender_id)
        values (#{content}, #{chat_id}, #{sender_id});
    </insert>

    <select id="isExistChatRoom" resultType="chat">
        select * from chat where room_id = #{room_id}
    </select>

    <select id="findEmailById" resultType="String">
        select user_email from users where user_id = #{sellerId}
    </select>

    <select id="findIdByEmail" resultType="Long">
        select user_id from users where user_email = #{buyerEmail}
    </select>

    <select id="getReceiverId" resultType="Long">
        SELECT CASE
                   WHEN seller_id = #{senderId} THEN buyer_id
                   ELSE seller_id
                   END
        FROM chat
        WHERE chat_id = #{chatId}
    </select>
    
    <select id="findById" parameterType="Long">
        SELECT content FROM chat_message WHERE chat_message_id = #{entityId}
    </select>


</mapper>
