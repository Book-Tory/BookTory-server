<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booktory.booktoryserver.Chat.mapper.ChatMapper">
    <insert id="createChatRoom" parameterType="chat">
        insert into chat (seller_id, buyer_id, used_book_id, room_id) values (#{seller_id}, #{buyer_id}, #{used_book_id}, #{room_id})
    </insert>

    <select id="getChatRoomList" resultType="chatList">
        SELECT
            c.chat_id,
            #{username} AS user_email,
            CASE
                WHEN c.seller_id = user.id THEN buyer.user_nickname
                ELSE seller.user_nickname
                END AS chat_partner_nickname,
            CASE
                WHEN c.seller_id = user.id THEN buyer.user_img
                ELSE seller.user_img
                END AS chat_partner_img,
            (
                SELECT cm.content
                FROM chat_message cm
                WHERE cm.chat_id = c.chat_id
                ORDER BY cm.message_created_at DESC
                           LIMIT 1
            ) AS last_message_content,
        (
            SELECT cm.message_created_at
            FROM chat_message cm
            WHERE cm.chat_id = c.chat_id
            ORDER BY cm.message_created_at DESC
            LIMIT 1
        ) AS last_message_time
        FROM chat c
            LEFT JOIN users buyer ON c.buyer_id = buyer.user_id
            LEFT JOIN users seller ON c.seller_id = seller.user_id
            JOIN (
            SELECT user_id AS id
            FROM users
            WHERE user_email = #{username}
            ) user ON (c.seller_id = user.id OR c.buyer_id = user.id)
        WHERE c.seller_id = user.id OR c.buyer_id = user.id;
    </select>

    <select id="getChatHistory" resultType="chatHistory">
        SELECT
            c.chat_id,
            CASE
                WHEN c.seller_id = user.id THEN buyer.user_nickname
                ELSE seller.user_nickname
                END AS chat_partner_nickname,
            cm.sender_id,
            sender.user_nickname AS sender_nickname,
            sender.user_email AS sender_email,
            ub.title,
            ub.discount,
            cm.content AS message_content,
            cm.message_created_at AS message_created_at
        FROM chat c
                 JOIN chat_message cm ON c.chat_id = cm.chat_id
                 JOIN used_book ub ON c.used_book_id = ub.used_book_id
                 LEFT JOIN users buyer ON c.buyer_id = buyer.user_id
                 LEFT JOIN users seller ON c.seller_id = seller.user_id
                 LEFT JOIN users sender ON cm.sender_id = sender.user_id
                 JOIN (
            SELECT user_id AS id
            FROM users
            WHERE user_email = #{username}
        ) user ON (c.seller_id = user.id OR c.buyer_id = user.id)
        WHERE c.chat_id = #{chat_id}
          AND (c.seller_id = user.id OR c.buyer_id = user.id);
    </select>


    <insert id="saveMessage" parameterType="chatMessage">
        insert into chat_message
        (content, chat_id, sender_id)
        values (#{content}, #{chat_id}, #{sender_id});
    </insert>

    <select id="isExistChatRoom" resultType="chat">
        select * from chat where room_id = #{room_id}
    </select>
</mapper>
